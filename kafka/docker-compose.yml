version: '3.8'

services:
  # Zookeeper + Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    deploy:
      resources:
        limits:
          memory: 512M
    healthcheck:
      test: echo ruok | nc localhost 2181 || exit 1
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - crypto_network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:29092,EXTERNAL://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    deploy:
      resources:
        limits:
          memory: 1G
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server=localhost:9092"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - crypto_network

  # ClickHouse
  clickhouse:
    image: clickhouse/clickhouse-server:latest
    ports:
      - "8123:8123"
      - "9000:9000"
    environment:
      CLICKHOUSE_DB: crypto
      CLICKHOUSE_USER: default
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: 1
    deploy:
      resources:
        limits:
          memory: 2G
    healthcheck:
      test: ["CMD", "clickhouse-client", "--query", "SELECT 1"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - crypto_network

  # Spark Master + Worker
  spark-master:
    build:
      context: .
      dockerfile: Dockerfile.spark-master
    hostname: spark-master
    ports:
      - "8080:8080"  # Spark UI
      - "7077:7077"  # Spark Master port
    environment:
      - SPARK_MODE=master
      - SPARK_MASTER_WEBUI_PORT=8080
      - SPARK_MASTER_PORT=7077
      - SPARK_MASTER_HOST=spark-master
      - SPARK_MASTER_OPTS="-Dspark.deploy.defaultCores=2"
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    deploy:
      resources:
        limits:
          memory: 1G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    networks:
      - crypto_network

  spark-worker:
    build:
      context: .
      dockerfile: Dockerfile.spark-worker
    depends_on:
      - spark-master
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=2g
      - SPARK_WORKER_CORES=2
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - "8081:8081"
    deploy:
      resources:
        limits:
          memory: 2G
    networks:
      - crypto_network

  # Spark Streaming App
  spark-streaming:
    build:
      context: .
      dockerfile: Dockerfile.spark
    depends_on:
      kafka:
        condition: service_healthy
      clickhouse:
        condition: service_healthy
      spark-master:
        condition: service_healthy
    environment:
      - SPARK_MASTER=spark://spark-master:7077
      - SPARK_DRIVER_MEMORY=1g
      - SPARK_EXECUTOR_MEMORY=1g
      - SPARK_EXECUTOR_CORES=2
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - CLICKHOUSE_HOST=clickhouse
      - CLICKHOUSE_PORT=9000
      - CLICKHOUSE_DATABASE=crypto
      - CLICKHOUSE_USER=default
    volumes:
      - ./spark_streaming.py:/opt/spark/work-dir/spark_streaming.py
    command: >
      /opt/spark/bin/spark-submit
      --master spark://spark-master:7077
      --deploy-mode client
      --driver-memory 1g
      --executor-memory 1g
      --executor-cores 2
      --packages org.apache.spark:spark-sql-kafka-0-10_2.12:3.5.0,com.clickhouse:clickhouse-jdbc:0.4.6
      --driver-class-path /opt/spark/jars/clickhouse-jdbc-0.4.6-all.jar
      /opt/spark/work-dir/spark_streaming.py
    deploy:
      resources:
        limits:
          memory: 2G
    networks:
      - crypto_network

  # Dash App
  dash-app:
    build:
      context: .
      dockerfile: Dockerfile.dash
    ports:
      - "8050:8050"
    depends_on:
      clickhouse:
        condition: service_healthy
    environment:
      - CLICKHOUSE_HOST=clickhouse
      - CLICKHOUSE_PORT=9000
      - CLICKHOUSE_DATABASE=crypto
      - CLICKHOUSE_USER=default
    deploy:
      resources:
        limits:
          memory: 512M
    networks:
      - crypto_network

  # Producer
  binance-producer:
    build:
      context: .
      dockerfile: Dockerfile.producer
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - BINANCE_SYMBOLS=BTCUSDT,ETHUSDT,BNBUSDT
      - BINANCE_INTERVAL=1s
    deploy:
      resources:
        limits:
          memory: 512M
    networks:
      - crypto_network

networks:
  crypto_network:
    driver: bridge